
  <a class="waves-effect waves-light btn modal-trigger" href="#modal1">Modal</a>
<script>
  $(document).ready(function(){
    // the "href" attribute of the modal trigger must specify the modal ID that wants to be triggered
    $('.modal').modal();
  })
  </script>
<!-- Modal Structure -->
<div id="modal1" class="modal">
 <div class="modal-content">
   <h4>Modal Header</h4>
   <p>A bunch of text</p>
 </div>
 <div class="modal-footer">
   <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Agree</a>
 </div>
</div>
  <div class="card" >
  <div class="card-image waves-effect waves-block waves-light">
    <img class="activator" src="images/office.jpg">
  </div>
  <div class="card-content">
    <span class="card-title activator grey-text text-darken-4">Card Title<i class="material-icons right">more_vert</i></span>
    <p><a href="#">This is a link</a></p>
  </div>
  <div class="card-reveal">
    <span class="card-title grey-text text-darken-4">Card Title<i class="material-icons right">close</i></span>
    <p>Here is some more information about this product that is only revealed once clicked on.</p>
  </div>
</div>

<svg class="chart js-chart"></svg>

<script src="https://d3js.org/d3.v4.min.js"></script>
<script type="text/javascript">
"use strict";

/* global d3, document, window */
function pieChart (options) {
  var animationDuration = 750,
    color = d3.scaleOrdinal(d3.schemeCategory20),
    data = [],
    innerRadius = 10,
    outerRadius = 100,
    arc = d3.arc(),
    pie = d3.pie()
      .sort(null)
      .value(function (d) {
        return d.value;
      });

  function updateTween (d) {
    var i = d3.interpolate(this._current, d);
    this._current = i(0);
    return function(t) {
      return arc(i(t));
    };
  }

  function exitTween (d) {
    var end = Object.assign({}, this._current, { startAngle: this._current.endAngle });
    var i = d3.interpolate(d, end);
    return function(t) {
      return arc(i(t));
    };
  }

  function joinKey (d) {
    return d.data.series;
  }

  function pieChart (context) {
    var slices = context.selectAll('.slice').data(pie(data), joinKey);

    var oldSlices = slices.exit();

    var newSlices = slices.enter().append('path')
      .each(function(d) { this._current = Object.assign({}, d, { startAngle: d.endAngle }); })
      .attr('class', 'slice')
      .style('fill', function (d) { return color(joinKey(d)); });

    var t = d3.transition().duration(animationDuration);

    arc.innerRadius(innerRadius).outerRadius(outerRadius);

    oldSlices
      .transition(t)
        .attrTween('d', exitTween)
        .remove();

    var t2 = t.transition();
    slices
      .transition(t2)
        .attrTween('d', updateTween);

    var t3 = t2.transition();
    newSlices
      .transition(t3)
        .attrTween('d', updateTween);
  }

  pieChart.data = function (_) {
    return arguments.length ? (data = _, pieChart) : data;
  };

  pieChart.innerRadius = function (_) {
    return arguments.length ? (innerRadius = _, pieChart) : innerRadius;
  };

  pieChart.outerRadius = function (_) {
    return arguments.length ? (outerRadius = _, pieChart) : outerRadius;
  };

  return pieChart;
}

var width = document.querySelector('body').clientWidth;
var height = 500;
var dataset1 = [{series: 1, value: 1}, {series: 2, value: 2}, {series: 3, value: 3}, {series: 4, value: 4}, {series: 5, value: 5}];
var dataset2 = [{series: 1, value: 5}, {series: 3, value: 4}, {series: 6, value: 3}];
var pieChart = pieChart().outerRadius(220).innerRadius(0);

var svg = d3.select('.js-chart')
  .attr('width', width)
  .attr('height', height);

var domPieChart = svg.append('g')
  .attr('class', 'pie-chart')
  .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')')
  .call(pieChart.data(dataset1));

var toggle = true;
domPieChart.call(pieChart.data(dataset1));
window.setInterval(function() {
  if (toggle) {
    domPieChart.call(pieChart.data(dataset2));
  } else {
    domPieChart.call(pieChart.data(dataset1));
  }
  toggle = !toggle;
}, 3500);
</script>
